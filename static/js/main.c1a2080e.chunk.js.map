{"version":3,"sources":["assets/images/food-header.jpg","components/Navbar.js","components/Footer/Footer.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RatingLabel.js","components/RestaurantCard.js","pages/City.js","components/Review.js","components/RestaurantProfile.js","pages/RestaurantDetail.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","Footer","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","country_name","to","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subtitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","changeKeywordHandler","event","setState","keyword","target","searchHandler","state","url","axios","get","headers","params","q","then","data","status","citiesResultSearch","location_suggestions","cityKeywordSearch","catch","err","console","log","getFeaturedCities","city_ids","featuredCities","this","marginTop","Component","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","color","removeCriteriaHandler","RatingLabel","backgroundColor","labelColor","borderColor","text","RestaurantCard","restaurant","thumb","borderRadius","fontWeight","location","locality","address","user_rating","rating_color","aggregate_rating","rating_text","cuisines","currency","average_cost_for_two","textDecoration","City","restaurants","entity_id","entity_type","transformCategoriesData","getCityData","city_id","newCriteria","push","filter","addToCriteriaHandler","splice","getCategoriesData","renderRestaurantList","match","Review","border","class","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantProfile","featured_image","RestaurantDetail","getRestaurantData","restaurant_id","res_id","getReviewsData","reviews","user_reviews","App","path","exact","component","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","require","config"],"mappings":"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","file":"static/js/main.c1a2080e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food-header.b8ff6505.jpg\";","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <Link className=\"navbar-brand text-white\" href=\"/\">Sa Pu Makanan</Link>\r\n    </nav>\r\n)\r\n\r\nexport default  Navbar;","import React from 'react';\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer\">\r\n        <div className=\"text-center\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>About Sa Pu Makanan</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">About Us</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Contact Us</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Support</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">FAQ</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Help desk</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Forums</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-sm-4 text-center\">\r\n                        <h5>Download App</h5>\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"/#\">Google App</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">App Store</a>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"social-networks\">\r\n                <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n                <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n                <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\r\n            </div>\r\n            <div className=\"text-center footer-copyright\">\r\n            <p>Copyright &copy; 2020 Sa Pu Makanan</p>\r\n            </div>\r\n        </div>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from 'react';\r\nimport mainImage from \"../assets/images/food-header.jpg\";\r\n\r\nconst ImageAndWelcome = () => (\r\n    <>\r\n    <div className=\"row\" style={{marginBottom: 30}}>\r\n    <img src={mainImage} width=\"100%\" alt=\"Aneka Makanan\"></img>\r\n  </div>\r\n  <div className=\"row\">\r\n    <div className=\"col\">\r\n      <div className=\"card text-white bg-success mb-3 text-center\">\r\n        <div className=\"card -header bg-success\"><h1>Welcome to Sa Pu Makanan</h1></div>\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">The Easiest Way to  Find Restaurants and Food</h4>\r\n          <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\r\n          <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </>\r\n)\r\n\r\nexport default ImageAndWelcome;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h3 className=\"card-title\">{props.city.name}</h3>\r\n                <p>{props.city.country_name}</p>\r\n                <Link to={`/city/${props.city.id}`}  className=\"card-text\">See restaurants in {props.city.name}</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default CityCard;","import React from 'react';\r\nimport CityCard from './CityCard';\r\n\r\nconst CityList = (props) => (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h3>{props.title}</h3>\r\n                    {props.showSubtitle === true && props.subtitle != '' &&\r\n                        <h6 className=\"text-muted\">Search result for keyword '{props.subtitle}'</h6>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                {props.cities == null ? (\r\n                    <div className=\"col\">\r\n                        <p>Loading ...</p>\r\n                    </div>\r\n                ) : (\r\n                   _renderCityList(props.cities)\r\n            )}\r\n            \r\n            </div>\r\n        </>\r\n);\r\n\r\nconst _renderCityList = (cities) => {\r\n    if (cities.length > 0) {\r\n        return(\r\n        cities.map(city =>\r\n            <CityCard key={city.id} city={city} />    \r\n            )\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"col\">\r\n                <p className=\"text-danger\">Data not found!</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default CityList;","import React from 'react'\r\n\r\nconst SearchCity = (props) => (\r\n  <div className=\"row\" style={{ marginBottom: 30 }}>\r\n    <div className=\"col\">\r\n      <h3>Search City</h3>\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"form-row\">\r\n            <div className=\"col-11\">\r\n              <input\r\n                  className=\"form-control\"\r\n                  type=\"text\"\r\n                  placeholder=\"Type keyword or city name\"\r\n                  value={props.value}\r\n                  onChange={props.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                type=\"button\"\r\n                onClick={props.onClickSearch}\r\n              >\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default SearchCity","export const API = {\r\n    zomato: {\r\n        baseUrl: \"https://developers.zomato.com/api/v2.1\",\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ImageAndWelcome from '../components/ImageAndWelcome';\r\nimport CityList from '../components/CityList';\r\nimport SearchCity from '../components/SearchCity';\r\nimport axios from 'axios';\r\nimport {API} from \"../config/api\"\r\n\r\nclass Home extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          keyword: \"\",\r\n          featuredCities: null,\r\n          citiesResultSearch: null,\r\n          cityKeywordSearch: ''\r\n        };\r\n      }\r\n      changeKeywordHandler = (event) => {\r\n          //console.log(event.target.value)\r\n          this.setState({ keyword: event.target.value });\r\n      };\r\n      \r\n      searchHandler = () => {\r\n        let keyword = this.state.keyword;\r\n        var url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': API.zomato.api_key\r\n          },\r\n          params: {\r\n            q: keyword\r\n          }\r\n        }).then(({data}) => {\r\n          if (data.status === \"success\") {\r\n            this.setState({\r\n              citiesResultSearch: data.location_suggestions, \r\n              keyword: '',\r\n              cityKeywordSearch: keyword\r\n          })\r\n          }\r\n        }).catch(err => console.log(err))\r\n      }\r\n\r\n    getFeaturedCities = () => {\r\n        var url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n            headers: {\r\n                \"user-key\": API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: \"74,11052,170\"\r\n            }\r\n        }).then(({data}) => {\r\n            if (data.status === \"success\") {\r\n                this.setState ( {featuredCities: data.location_suggestions})\r\n            }\r\n        }).catch(err => console.log(err));\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getFeaturedCities();\r\n    }\r\n    render () {\r\n        const citiesDummy = [\r\n            { id: 72, name: \"Jakarta\", country_name: \"Indonesia\"},\r\n            { id: 11052, name: \"Bandung\", country_name: \"Indonesia\"},\r\n            { id: 170, name: \"Bali\", country_name: \"Indonesia\"}\r\n          ];\r\n        return (\r\n            <>\r\n        <ImageAndWelcome />\r\n        <div className=\"container\" style={{ marginTop:30 , marginBottom: 30}}>\r\n            <CityList cities={this.state.featuredCities} \r\n            title={\"Featured Cities\"} />\r\n            <SearchCity\r\n              value={this.state.keyword}\r\n              onChange={this.changeKeywordHandler}\r\n              onClickSearch={this.searchHandler}\r\n            />\r\n            {this.state.cityKeywordSearch !== '' && (\r\n            <CityList\r\n            title={'Search Result'}\r\n            cities={this.state.citiesResultSearch}\r\n            showSubtitle={true}\r\n            subtitle={this.state.cityKeywordSearch}\r\n            />\r\n            )}\r\n            </div>\r\n         \r\n         </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n      <div className=\"list-group\">\r\n        {props.categories.map(category => (\r\n          <button\r\n            key={category.id}\r\n            className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\r\n            onClick={() => props.categoryClickHandler(category)}\r\n          >\r\n            {category.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <p>Loading...</p>\r\n    )\r\n)\r\n\r\nexport default CategoryList","import React from 'react'\r\n\r\nconst SearchKeyword = (props) => (\r\n                <>\r\n                <h5>Keyword</h5>\r\n                  <div className=\"card\">\r\n                      <div className=\"card-body\">\r\n                          <div className=\"form-row\">\r\n                              <div className=\"col-10\">\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\r\n                                    value={props.keyword}\r\n                                    onChange={props.changeKeywordHandler}\r\n                                />\r\n                              </div>\r\n                              <div className=\"col\">\r\n                                    <button\r\n                                        className=\"btn btn-primary\"\r\n                                        type=\"button\"\r\n                                        onClick={props.onClickAddToCriteria}\r\n                                    >\r\n                                        Add to criteria\r\n                                    </button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n                  </>\r\n)\r\n\r\nexport default SearchKeyword","import React from 'react'\r\n\r\nconst SearchCriteria = (props) => (\r\n                    \r\n                    <div className=\"card bg-light mb-3\" style={{ marginTop: 20 }}>\r\n                        <div className=\"card-body\">\r\n                            <p className=\"card-title\">Find Restaurants based on criteria : </p>\r\n                            <table className=\"table table-hover\">\r\n                                <tbody>\r\n\r\n                                        {props.criteria.map((cri, index) => (\r\n                                            <tr key={index} className=\"table-active\">\r\n                                                <td width=\"40%\">{cri.criteriaName}</td>\r\n                                                <td width=\"50%\">{cri.data.name}</td>\r\n                                                <td>\r\n                                                    {cri.criteriaName !== 'City' && (\r\n                                                        <i\r\n                                                        className=\"fa fa-times\"\r\n                                                        aria-hidden=\"true\"\r\n                                                        style={{ color: 'red'}}\r\n                                                        onClick={() => props.removeCriteriaHandler(index)}\r\n                                                        />\r\n                                                    )}\r\n                                                    \r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n\r\n                                </tbody>\r\n                            </table>\r\n                            <div className=\"pull-right\">\r\n                                <button\r\n                                    className=\"btn btn-primary\"\r\n                                    type=\"button\"\r\n                                    onClick={props.onClickSearch}\r\n                                >\r\n                                    Search\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n)\r\n\r\nexport default SearchCriteria","import React from 'react'\r\n\r\nconst RatingLabel = (props) => (\r\n        <div className=\"btn btn-sm\"\r\n        style={{\r\n            color: 'white',\r\n            backgroundColor: `#${props.labelColor}`,\r\n            borderColor: `#${props.labelColor}`,\r\n        }}\r\n        >\r\n            { props.text }\r\n        </div>\r\n)\r\n\r\nexport default RatingLabel","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport RatingLabel from  './RatingLabel'\r\nconst RestaurantCard = (props) => (\r\n                                <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-3\">\r\n                                                    <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\"\r\n                                                        style={{ borderRadius: 5, width: 100}}\r\n                                                        >\r\n                                                        </img>\r\n                                                </div>\r\n                                                <div className=\"col-9\">\r\n                                                    <h4 className=\"text-success\" style={{ fontWeight: 800}}>{props.restaurant.name}</h4>\r\n                                                    <h6>{props.restaurant.location.locality}</h6>\r\n                                                    <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <table className=\"table\">\r\n                                                <tbody>\r\n                                                    <tr>\r\n                                                        <td>Rating</td>\r\n                                                        <td>\r\n                                                        <RatingLabel   \r\n                                                            labelColor={props.restaurant.user_rating.rating_color}\r\n                                                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \r\n                                                        />\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                                <td>Cuisines</td>\r\n                                                                <td>\r\n                                                                    {props.restaurant.cuisines}\r\n                                                                </td>    \r\n                                                    </tr>\r\n                                                    <tr>\r\n                                                        <td>Cost for two</td>\r\n                                                        <td>\r\n                                                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className=\"card-footer\">\r\n                                        <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                                            <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n                                            View Restaurant Details\r\n                                            </button>\r\n                                        </Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n)\r\n\r\nexport default RestaurantCard","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport CategoryList from '../components/CategoryList'\r\nimport SearchKeyword from '../components/SearchKeyword'\r\nimport SearchCriteria from '../components/SearchCriteria'\r\nimport RestaurantCard from '../components/RestaurantCard'\r\n\r\nconst restaurants = [\r\n    {\r\n      restaurant: {\r\n        id: \"18875696\",\r\n        name: \"Kintaro Sushi\",\r\n        location: {\r\n          address: \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          locality: \"Senopati\",\r\n        },\r\n        cuisines: \"Sushi, Japanese\",\r\n        average_cost_for_two: 200000,\r\n        currency: \"IDR\",\r\n        thumb: \r\n            \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        user_rating: {\r\n          aggregate_rating: \"4.9\",\r\n          rating_text: \"Excellent\",\r\n          rating_color: \"3F7E00\",\r\n          votes: \"1358\"\r\n        },\r\n      }\r\n    },\r\n    {\r\n      restaurant: {\r\n        id: \"18875696\",\r\n        name: \"Kintaro Sushi\",\r\n        location: {\r\n          address: \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          locality: \"Senopati\",\r\n        },\r\n        cuisines: \"Sushi, Japanese\",\r\n        average_cost_for_two: 200000,\r\n        currency: \"IDR\",\r\n        thumb: \r\n            \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        user_rating: {\r\n          aggregate_rating: \"4.9\",\r\n          rating_text: \"Excellent\",\r\n          rating_color: \"3F7E00\",\r\n          votes: \"1358\"\r\n        },\r\n      }\r\n    }\r\n  ] \r\nconst categoriesDumy = [\r\n    {\r\n        \"categories\": {\r\n          \"id\": 1,\r\n          \"name\": \"Delivery\"\r\n        }\r\n      },\r\n      {\r\n        \"categories\": {\r\n          \"id\": 2,\r\n          \"name\": \"Dine-out\"\r\n        }\r\n      },\r\n      {\r\n        \"categories\": {\r\n          \"id\": 3,\r\n          \"name\": \"Nightlife\"\r\n        }\r\n      },\r\n    {\r\n        \"categories\": {\r\n          \"id\": 4,\r\n          \"name\": \"Catching-up\"\r\n        }\r\n    }\r\n]\r\n\r\nclass City extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword: '',\r\n            criteria: [],\r\n            restaurants: []\r\n        }\r\n    }\r\n    searchHandler = () => {\r\n        this.setState({restaurants: null})\r\n        let url = `${API.zomato.baseUrl}/search`\r\n        let params = {}\r\n\r\n        for (let cri of this.state.criteria) {\r\n            \r\n            switch (cri.criteriaName) {\r\n                case 'City' :\r\n                    params.entity_id    = cri.data.id\r\n                    params.entity_type  = 'city'\r\n                    break\r\n                case 'Category' :\r\n                    params.category     = cri.data.id\r\n                    break\r\n                case 'Category' :\r\n                    params.category     = cri.data.id\r\n                    break\r\n                case 'Keyword' :\r\n                    params.q            = cri.data.name\r\n                    break\r\n                default : break\r\n            }\r\n        }\r\n\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key' : API.zomato.api_key\r\n            },\r\n            params\r\n        })\r\n            .then(({ data}) => {\r\n                this.setState({ restaurants : data.restaurants })\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    transformCategoriesData = categories => {\r\n        let categoriesTrasnformed = categories.map(category => {\r\n            return category.categories\r\n        })\r\n\r\n        return categoriesTrasnformed\r\n    }\r\n\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                city_ids: `${city_id}`\r\n            }\r\n        })\r\n        .then(({ data}) => {\r\n            let city = data.location_suggestions[0];\r\n            let newCriteria = {\r\n                criteriaName: 'City',\r\n                data: city\r\n            }\r\n            let criteria = [...this.state.criteria]\r\n            criteria.push(newCriteria)\r\n            this.setState({ city, criteria });\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n    componentDidMount () {\r\n        // cara mendapatkan parameter city_id dari url / route\r\n        let { city_id } = this.props.match.params;\r\n        this.getCityData(city_id);\r\n        this.getCategoriesData()\r\n\r\n        \r\n    }\r\n    categoryClickHandler = ( category ) => {\r\n        let criteria = [...this.state.criteria]\r\n        // ambil element array selain element dengan criteriaNamw 'Category'\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Category')\r\n        let newCriteria = {\r\n            criteriaName: 'Category',\r\n            data: category\r\n        }\r\n        criteria.push(newCriteria)\r\n        this.setState({ categorySelected: category, criteria })\r\n    } \r\n\r\n    changeKeywordHandler = event => {\r\n        this.setState({ keyword: event.target.value })\r\n    }\r\n    addToCriteriaHandler = () => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\r\n        let newCriteria = {\r\n            criteriaName    : 'Keyword',\r\n            data            : {\r\n                name: this.state.keyword\r\n            }\r\n        }\r\n\r\n        criteria.push(newCriteria)\r\n        this.setState({ keyword: '', criteria })\r\n    }\r\n    removeCriteriaHandler = (index) => {\r\n        let criteria = [...this.state.criteria]\r\n        criteria.splice(index, 1)\r\n        this.setState({ criteria })\r\n    }\r\n    getCategoriesData = () => {\r\n        let url = `${API.zomato.baseUrl}/categories`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            let categories = this.transformCategoriesData(data.categories)\r\n            this.setState({ categories })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    renderRestaurantList = () => {\r\n        if(this.state.restaurants == null) {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>Loading...</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if(this.state.restaurants.length > 0) {\r\n            return (\r\n                this.state.restaurants.map(({ restaurant}) => (\r\n                    <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n                ))\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"col\">\r\n                    <p>No Data available. Please select criteria, and click Search</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n           <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30}}>\r\n               { this.state.city && (\r\n                    <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <h4 className=\"text-success\">\r\n                            Restaurant in { this.state.city.name},{ this.state.city.country_name }\r\n                        </h4>\r\n                    </div>\r\n                    </div>\r\n               )}\r\n              <div className=\"row\">\r\n                  <div className=\"col-3\">\r\n                    <h5>Categories</h5>\r\n                    <CategoryList\r\n                        categories={this.state.categories}\r\n                        categorySelected={this.state.categorySelected}\r\n                        categoryClickHandler={(category) => this.categoryClickHandler(category)}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col\">\r\n                    <SearchKeyword\r\n                        keyword={this.state.keyword}\r\n                        changeKeywordHandler={this.changeKeywordHandler}\r\n                        onClickAddToCriteria={this.addToCriteriaHandler}\r\n                    />\r\n                    <SearchCriteria\r\n                        criteria={this.state.criteria}\r\n                        removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\r\n                        onClickSearch={this.searchHandler}\r\n                    />\r\n                    <div className=\"row\">\r\n                        <div className=\"col\" style={{ marginBottom: 10}}>\r\n                            <h4 className=\"text-success\">Restaurant List</h4>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        { this.renderRestaurantList() }\r\n                    </div>\r\n              </div>\r\n              </div>\r\n              \r\n           </div>\r\n        );\r\n    }\r\n} \r\n\r\nexport default City","import React from 'react'\r\nimport RatingLabel from './RatingLabel'\r\n\r\nconst Review = (props) => (\r\n    <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n        <div className=\"card-body\">\r\n        <div className=\"row\" style={{ marginBottom: 20 }}>\r\n            <div className=\"col-1\" style={{ border: '0px solid black' }}>\r\n            <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\r\n            </div>\r\n            <div className=\"col-11\" style={{ border: '0px solid black' }}>\r\n            <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n            <RatingLabel\r\n                text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n                labelColor={`${props.review.user.foodie_color}`}\r\n            />\r\n            </div>\r\n        </div>\r\n        <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n        <RatingLabel\r\n            text={`${props.review.rating} (${props.review.rating_text})`}\r\n            labelColor={`${props.review.rating_color}`}\r\n        />\r\n        <p className=\"card-text\">{props.review.review_text}</p>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Review","import React from 'react'\r\nimport RatingLabel from './RatingLabel'\r\n\r\nconst RestaurantProfile = (props) => (\r\n    <div className=\"card\">\r\n    <div className=\"card-header\">\r\n        <div className=\"row\">\r\n        <div className=\"col\">\r\n        {\r\n        props.restaurant ? (\r\n            <>\r\n            <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n            <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n            <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n            </>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )\r\n        }\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <div className=\"card-body\">\r\n        {\r\n            props.restaurant ? (\r\n        <div className=\"row\">\r\n        <div className=\"col-6\">\r\n            <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\r\n        </div>\r\n        <div className=\"col-6\">\r\n            <table className=\"table\">\r\n            <tbody>\r\n                <tr>\r\n                <td>Rating</td>\r\n                <td>\r\n                <RatingLabel\r\n                    labelColor={props.restaurant.user_rating.rating_color}\r\n                    text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                />\r\n                </td>\r\n                </tr>\r\n                <tr>\r\n                <td>Cuisines</td>\r\n                <td>\r\n                    {props.restaurant.cuisines}\r\n                </td>\r\n                </tr>\r\n                <tr>\r\n                <td>Cost for two</td>\r\n                <td>\r\n                    {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                </td>\r\n                </tr>\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n            ) : (\r\n                <p>Loading...</p>\r\n            )\r\n        }\r\n    </div>\r\n</div>\r\n)\r\n\r\nexport default RestaurantProfile","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { API } from '../config/api'\r\n\r\nimport Review from '../components/Review'\r\nimport RestaurantProfile from '../components/RestaurantProfile'\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        }\r\n    }\r\n    getRestaurantData = (restaurant_id) => {\r\n        let url =`${API.zomato.baseUrl}/restaurant`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ restaurant: data })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    componentDidMount () {\r\n        let { params } = this.props.match\r\n        this.getRestaurantData(params.restaurant_id)\r\n        this.getReviewsData(params.restaurant_id)\r\n    }\r\n    getReviewsData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': API.zomato.api_key\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ reviews: data.user_reviews })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" style={{ marginBottom: 20}}>\r\n                       <RestaurantProfile restaurant={this.state.restaurant}/>\r\n                       <div className=\"col-12\" style={{ marginBottom: 20 }}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                <h4 className=\"text-success\" style={{ fontWeight: 800 }}>Reviews</h4>\r\n                                {this.state.reviews ? (\r\n                                    this.state.reviews.map(({ review }) => (\r\n                                    <Review key={review.id} review={review} />\r\n                                    ))\r\n                                ) : (\r\n                                    <p>Loading...</p>\r\n                                )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RestaurantDetail","import React, {Component} from 'react';\nimport Navbar from './components/Navbar';\nimport Footer from \"./components/Footer/Footer\";\nimport Home from \"./pages/Home\";\nimport City from \"./pages/City\";\nimport RestaurantDetail from './pages/RestaurantDetail'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\nclass App extends Component {\n  \n  render() {\n    \n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/city/:city_id\" component={City} />\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nrequire('dotenv').config();\n\n"],"sourceRoot":""}